name: Aqualab Build

# Controls when the action will run. Triggers the workflow on creation of 
# tags.  Creating new 'versions' via github is the most straightforward 
# way of doing this.
on:
  #create:
  #  tags:
  #    - '*'
  workflow_dispatch:
  #push
  #   branches: [ production ] 

env:
  
jobs:
  deploy:
    name: Deploy via rsync
    runs-on: ubuntu-20.04
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true

    # Setup Steps

    steps:
      
    - name: Install OpenConnect
      run: sudo apt-get -q update && sudo apt-get -q install openconnect
      
    - name: Connect to VPN
      run: echo ${{ secrets.FIELDDAY_VPN_PASSWORD }} | sudo openconnect --protocol=gp -u ${{ secrets.FIELDDAY_VPN_USERNAME }} --passwd-on-stdin soe.vpn.wisc.edu &
      
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        lfs: true
      
    - name: Checkout submodules
      uses: srt32/git-actions@v0.0.3
      with:
        args: git submodule update --init --recursive

    ## Extracts branch name into BRANCH environment variable
    #- name: Extract branch name
    #  shell: bash
    #  run: echo "BRANCH=$(echo ${GITHUB_REF#refs/heads/} | sed 's/\//_/g')" >> $GITHUB_ENV

    ## Extracts version tag into VERSION environment variable
    #- name: Extract version name
    #  shell: bash
    #  run: echo "VERSION=$(echo ${GITHUB_REF#refs/tags/} | sed 's/\//_/g')" >> $GITHUB_ENV
      
    # Unity Build Steps
  
    # Deploy Steps
    
    - name: Upload to web server via rsync
      uses: burnett01/rsync-deployments@5.2
      with:
        switches: -vrc
        path: /*
        remote_path: ${{ secrets.DEPLOY_DIR }}
        remote_host: ${{ secrets.FIELDDAY_WISC_EDU_DEPLOY_HOST }}
        remote_user: ${{ secrets.FIELDDAY_WISC_EDU_DEPLOY_USER }}
        remote_key: ${{ secrets.FIELDDAY_WISC_EDU_DEPLOY_KEY }}
    
